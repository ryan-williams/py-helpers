#!/usr/bin/env bash

set -e

err() {
  echo "Running: $*" >&2
}

run() {
  err "$*"
  "$@"
}

install_kernel=
args=()
for arg in "$@"; do
  if [ "$arg" == "-j" ]; then
    install_kernel=1
  else
    args+=("$arg")
  fi
done

set -- "${args[@]}"

base="${1:-"$(basename "$PWD")"}"
shift || true
if [ $# -eq 1 ]; then
  version="$1"; shift
elif [ $# -eq 0 ]; then
  version="$(python --version 2>&1 | grep -o '[0-9.]\+')"
else
  err "Usage: $0 [-j] [base [version]]"
  exit 1
fi

name="$base-$version"
run pyenv virtualenv "$version" "$name"
if git ls-files --error-unmatch .python-version &>/dev/null; then
  err "Found git-tracked .python-version file"
  if which direnv &>/dev/null; then
    err "Adding direnv hook"
    echo "export PYENV_VERSION=$name" >> .envrc
    direnv allow
  else
    err "direnv not found, no hook added"
    exit 1
  fi
else
  run pyenv local "$name"
fi

if [ -n "$install_kernel" ]; then
  err "Installing Jupyter kernel"
  pip install --upgrade pip ipykernel
  install_kernel
else
  err "Skipping Jupyter kernel install"
fi
